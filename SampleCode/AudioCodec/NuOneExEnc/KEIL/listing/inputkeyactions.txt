; generated by Component: ARM Compiler 5.06 update 1 (build 61) Tool: ArmCC [4d35ad]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\object\inputkeyactions.o --asm_dir=.\listing\ --list_dir=.\listing\ --depend=.\object\inputkeyactions.d --cpu=Cortex-M0 --apcs=interwork -O0 --diag_suppress=9931 -I. -I..\..\..\..\Library\Device\Nuvoton\ISD9100\Include -I..\..\..\..\Library\Framework\inc -I..\..\..\..\Library\IO\inc -I..\..\..\..\Library\Audio\inc -I..\..\..\..\Library\StdDriver\inc -I..\..\..\..\Library\Storage\inc -I..\..\..\..\Library\CMSIS\Include -I..\ -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=518 -D__ISD9100__ --omf_browse=.\object\inputkeyactions.crf ..\InputKeyActions.c]
                          THUMB

                          AREA ||i.Default_KeyHandler||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  Default_KeyHandler PROC
;;;77     
;;;78     void Default_KeyHandler(UINT32 u32Param)
000000  b570              PUSH     {r4-r6,lr}
;;;79     {
000002  4605              MOV      r5,r0
;;;80     	// Within this function, key state can be checked with these keywords:
;;;81     	//	TGnF: direct trigger key n is in falling state(pressing)
;;;82     	//	TGnR: direct trigger key n is in rising state(releasing)
;;;83     	//	TGnP: direct trigger key n is in long pressing state
;;;84     	//	KEYmF: matrix key m is in falling state(pressing)
;;;85     	//	KEYmR: matrix key m is in rising state(releasing)
;;;86     	//	KEYmP: matrix key m is in long pressing state
;;;87     	// the maxium value of n is defined by "TRIGGER_KEY_COUNT" in "ConfigIO.h"
;;;88     	// the maxium value of m is defined by "MATRIX_KEY_COUNT"  in "ConfigIO.h"
;;;89       static UINT8 IsRunning = 0;
;;;90     	UINT32 u32Tmp = 0;
000004  2400              MOVS     r4,#0
;;;91     	
;;;92       if(IsRunning == 1)
000006  4861              LDR      r0,|L1.396|
000008  7800              LDRB     r0,[r0,#0]  ; IsRunning
00000a  2801              CMP      r0,#1
00000c  d100              BNE      |L1.16|
                  |L1.14|
;;;93     	{
;;;94     		return;
;;;95     	}
;;;96     	IsRunning = 1;
;;;97     	
;;;98     #if 1  //pull up resistance at Grove pins
;;;99     		switch(u32Param)
;;;100    		{
;;;101    			case TG3R:	 //PB2
;;;102    				printf("TG3R...\n\r");
;;;103    			  //OUT5(1);
;;;104    			  //Playback_KeypadHandler(1);  // Stop play
;;;105    				break;
;;;106    			case TG3F:
;;;107    				printf("TG3F...\n\r");
;;;108    				OUT5(0);
;;;109    				printf("Start play\n\r");
;;;110    				Playback_KeypadHandler(0);  // Start play
;;;111    			
;;;112    			
;;;113    //				while((GPIO_GET_IN_DATA(PB) & BIT2 ) != BIT2)
;;;114    //				{
;;;115    //					if ( App_ProcessPlay() == FALSE )
;;;116    //						App_StopPlay();
;;;117    //				}	
;;;118    //				printf("Stop play\n\r");
;;;119    //				OUT5(1);
;;;120    //				Playback_KeypadHandler(1);  // Stop play		
;;;121    
;;;122    				while(1)
;;;123    				{
;;;124    					if(((GPIO_GET_IN_DATA(PB) & BIT2 ) == BIT2) && ( App_ProcessPlay() == FALSE ))
;;;125    					{
;;;126    							App_StopPlay();
;;;127    							OUT5(1);
;;;128    							Playback_KeypadHandler(1);  // Stop play
;;;129    						  break;
;;;130    					}
;;;131    			  }
;;;132    				break;
;;;133    			case TG4R:	//PB3
;;;134    				printf("TG4R...\n\r");
;;;135    				//Record_KeypadHandler(1);   //Stop rec
;;;136    				//OUT5(1);
;;;137    				break;
;;;138    			case TG4F:  // Start rec
;;;139    				printf("TG4F...\n\r");
;;;140    				OUT5(0);
;;;141    				Playback_KeypadHandler(1);  // Stop play
;;;142    				Record_KeypadHandler(0);   // Start rec
;;;143    				printf("Start Rec.\n\r");
;;;144    				while((GPIO_GET_IN_DATA(PB) & BIT3 ) != BIT3)
;;;145    				{
;;;146    					if ( App_ProcessRec() == FALSE )
;;;147    						App_StopRec();
;;;148    				}
;;;149    				OUT5(1);
;;;150    				printf("Stop Rec.\n\r");
;;;151    				Record_KeypadHandler(1);   //Stop rec
;;;152    				break;
;;;153    			case TG5R:	 //PB6 multiplexing Button, record and play
;;;154    				printf("TG5R...\n\r");
;;;155    				OUT5(1);
;;;156    				//Record_KeypadHandler(1);   //Stop rec
;;;157    				break;
;;;158    			case TG5F:
;;;159    				printf("TG5F...\n\r");
;;;160    				if(playEndStatus) {
;;;161    					while( (GPIO_GET_IN_DATA(PB) & BIT6 ) != BIT6)
;;;162    					{
;;;163    						delay_ms(10);	 //10ms
;;;164    						if( (u32Tmp++) >= 100)
;;;165    						{
;;;166    							//printf("Start Rec.\n\r");
;;;167    							Record_KeypadHandler(0);   //Start rec
;;;168    							while((GPIO_GET_IN_DATA(PB) & BIT6 ) != BIT6)
;;;169    							{
;;;170    								if ( App_ProcessRec() == FALSE )
;;;171    									App_StopRec();
;;;172    							}
;;;173    							break;
;;;174    						}
;;;175    					}
;;;176    
;;;177    					printf("Key5 press for %d*10ms.\n\r", u32Tmp);
;;;178    
;;;179    					delay_ms(10);
;;;180    					Record_KeypadHandler(1);  //Stop Rec
;;;181    					delay_ms(10);
;;;182    
;;;183    					if(u32Tmp < 100)
;;;184    					{
;;;185    						OUT5(0);
;;;186    						Playback_KeypadHandler(0);
;;;187    					}
;;;188    				}
;;;189    				break;
;;;190    		}
;;;191    #endif
;;;192    
;;;193    #if 0     //No pull up resistance
;;;194    		switch(u32Param)
;;;195    		{
;;;196    			case TG3F:	 //PB2
;;;197    				printf("TG3F...\n\r");
;;;198    				if(!playEndStatus) {
;;;199    					OUT5(1);
;;;200    					Playback_KeypadHandler(1);  // stop play
;;;201    				}
;;;202    				break;
;;;203    			case TG3R:
;;;204    				printf("TG3R...\n\r");
;;;205    				if(playEndStatus) {
;;;206    					Playback_KeypadHandler(0);  // start play
;;;207    					OUT5(0);
;;;208    				}
;;;209    				break;
;;;210    			case TG4F:	//PB3
;;;211    				printf("TG4F...\n\r");
;;;212    				if(!recEndStatus){
;;;213    					Record_KeypadHandler(1);   //Stop rec
;;;214    					OUT5(1);
;;;215    				}
;;;216    				break;
;;;217    			case TG4R:
;;;218    				printf("TG4R...\n\r");
;;;219    				if(recEndStatus){
;;;220    					OUT5(0);
;;;221    					Record_KeypadHandler(0);   //Start rec
;;;222    				}
;;;223    				break;
;;;224    			case TG5R:	 //PB6 multiplexing Button, record and play
;;;225    				printf("TG5R...\n\r");
;;;226    				OUT5(1);
;;;227    				//Record_KeypadHandler(1);   //Stop rec
;;;228    				break;
;;;229    			case TG5F:
;;;230    				printf("TG5F...\n\r");
;;;231    				if(playEndStatus) {
;;;232    					while( (GPIO_GET_IN_DATA(PB) & BIT6 ) != BIT6)
;;;233    					{
;;;234    						delay_ms(10);	 //10ms
;;;235    						if( (u32Tmp++) >= 100)
;;;236    						{
;;;237    							//printf("Start Rec.\n\r");
;;;238    							Record_KeypadHandler(0);   //Start rec
;;;239    							while((GPIO_GET_IN_DATA(PB) & BIT6 ) != BIT6)
;;;240    							{
;;;241    								if ( App_ProcessRec() == FALSE )
;;;242    									App_StopRec();
;;;243    							}
;;;244    							break;
;;;245    						}
;;;246    					}
;;;247    
;;;248    					printf("Key5 press for %d*10ms.\n\r", u32Tmp);
;;;249    
;;;250    					delay_ms(10);
;;;251    					Record_KeypadHandler(1);  //Stop Rec
;;;252    					delay_ms(10);
;;;253    
;;;254    					if(u32Tmp < 100)
;;;255    					{
;;;256    						OUT5(0);
;;;257    						Playback_KeypadHandler(0);
;;;258    					}
;;;259    				}
;;;260    				break;
;;;261    		}
;;;262    #endif
;;;263      
;;;264    	IsRunning = 0;
;;;265    }
00000e  bd70              POP      {r4-r6,pc}
                  |L1.16|
000010  2001              MOVS     r0,#1                 ;96
000012  495e              LDR      r1,|L1.396|
000014  7008              STRB     r0,[r1,#0]            ;96
000016  495e              LDR      r1,|L1.400|
000018  1a68              SUBS     r0,r5,r1              ;99
00001a  428d              CMP      r5,r1                 ;99
00001c  d012              BEQ      |L1.68|
00001e  dc08              BGT      |L1.50|
000020  485c              LDR      r0,|L1.404|
000022  1828              ADDS     r0,r5,r0              ;99
000024  2800              CMP      r0,#0                 ;99
000026  d009              BEQ      |L1.60|
000028  2801              CMP      r0,#1                 ;99
00002a  d032              BEQ      |L1.146|
00002c  2802              CMP      r0,#2                 ;99
                  |L1.46|
00002e  d108              BNE      |L1.66|
000030  e05d              B        |L1.238|
                  |L1.50|
000032  2801              CMP      r0,#1                 ;99
000034  d031              BEQ      |L1.154|
000036  2802              CMP      r0,#2                 ;99
000038  d1f9              BNE      |L1.46|
00003a  e061              B        |L1.256|
                  |L1.60|
00003c  a056              ADR      r0,|L1.408|
00003e  f7fffffe          BL       __2printf
                  |L1.66|
000042  e09c              B        |L1.382|
                  |L1.68|
000044  a057              ADR      r0,|L1.420|
000046  f7fffffe          BL       __2printf
00004a  2200              MOVS     r2,#0                 ;108
00004c  2110              MOVS     r1,#0x10              ;108
00004e  4858              LDR      r0,|L1.432|
000050  f7fffffe          BL       OutputPin_Set
000054  a057              ADR      r0,|L1.436|
000056  f7fffffe          BL       __2printf
00005a  2000              MOVS     r0,#0                 ;110
00005c  f7fffffe          BL       Playback_KeypadHandler
000060  e014              B        |L1.140|
                  |L1.98|
000062  4853              LDR      r0,|L1.432|
000064  6900              LDR      r0,[r0,#0x10]         ;124
000066  2104              MOVS     r1,#4                 ;124
000068  4008              ANDS     r0,r0,r1              ;124
00006a  2804              CMP      r0,#4                 ;124
00006c  d10e              BNE      |L1.140|
00006e  f7fffffe          BL       App_ProcessPlay
000072  2800              CMP      r0,#0                 ;124
000074  d10a              BNE      |L1.140|
000076  f7fffffe          BL       App_StopPlay
00007a  2201              MOVS     r2,#1                 ;127
00007c  2110              MOVS     r1,#0x10              ;127
00007e  484c              LDR      r0,|L1.432|
000080  f7fffffe          BL       OutputPin_Set
000084  2001              MOVS     r0,#1                 ;128
000086  f7fffffe          BL       Playback_KeypadHandler
00008a  e000              B        |L1.142|
                  |L1.140|
00008c  e7e9              B        |L1.98|
                  |L1.142|
00008e  bf00              NOP                            ;129
000090  e075              B        |L1.382|
                  |L1.146|
000092  a04c              ADR      r0,|L1.452|
000094  f7fffffe          BL       __2printf
000098  e071              B        |L1.382|
                  |L1.154|
00009a  a04d              ADR      r0,|L1.464|
00009c  f7fffffe          BL       __2printf
0000a0  2200              MOVS     r2,#0                 ;140
0000a2  2110              MOVS     r1,#0x10              ;140
0000a4  4842              LDR      r0,|L1.432|
0000a6  f7fffffe          BL       OutputPin_Set
0000aa  2001              MOVS     r0,#1                 ;141
0000ac  f7fffffe          BL       Playback_KeypadHandler
0000b0  2000              MOVS     r0,#0                 ;142
0000b2  f7fffffe          BL       Record_KeypadHandler
0000b6  a049              ADR      r0,|L1.476|
0000b8  f7fffffe          BL       __2printf
0000bc  e005              B        |L1.202|
                  |L1.190|
0000be  f7fffffe          BL       App_ProcessRec
0000c2  2800              CMP      r0,#0                 ;146
0000c4  d101              BNE      |L1.202|
0000c6  f7fffffe          BL       App_StopRec
                  |L1.202|
0000ca  4839              LDR      r0,|L1.432|
0000cc  6900              LDR      r0,[r0,#0x10]         ;144
0000ce  2108              MOVS     r1,#8                 ;144
0000d0  4008              ANDS     r0,r0,r1              ;144
0000d2  2808              CMP      r0,#8                 ;144
0000d4  d1f3              BNE      |L1.190|
0000d6  2201              MOVS     r2,#1                 ;149
0000d8  2110              MOVS     r1,#0x10              ;149
0000da  4835              LDR      r0,|L1.432|
0000dc  f7fffffe          BL       OutputPin_Set
0000e0  a042              ADR      r0,|L1.492|
0000e2  f7fffffe          BL       __2printf
0000e6  2001              MOVS     r0,#1                 ;151
0000e8  f7fffffe          BL       Record_KeypadHandler
0000ec  e047              B        |L1.382|
                  |L1.238|
0000ee  a042              ADR      r0,|L1.504|
0000f0  f7fffffe          BL       __2printf
0000f4  2201              MOVS     r2,#1                 ;155
0000f6  2110              MOVS     r1,#0x10              ;155
0000f8  482d              LDR      r0,|L1.432|
0000fa  f7fffffe          BL       OutputPin_Set
0000fe  e03e              B        |L1.382|
                  |L1.256|
000100  a040              ADR      r0,|L1.516|
000102  f7fffffe          BL       __2printf
000106  4842              LDR      r0,|L1.528|
000108  7800              LDRB     r0,[r0,#0]            ;160  ; playEndStatus
00010a  2800              CMP      r0,#0                 ;160
00010c  d036              BEQ      |L1.380|
00010e  e017              B        |L1.320|
                  |L1.272|
000110  200a              MOVS     r0,#0xa               ;163
000112  f7fffffe          BL       delay_ms
000116  4620              MOV      r0,r4                 ;164
000118  1c64              ADDS     r4,r4,#1              ;164
00011a  2864              CMP      r0,#0x64              ;164
00011c  d310              BCC      |L1.320|
00011e  2000              MOVS     r0,#0                 ;167
000120  f7fffffe          BL       Record_KeypadHandler
000124  e005              B        |L1.306|
                  |L1.294|
000126  f7fffffe          BL       App_ProcessRec
00012a  2800              CMP      r0,#0                 ;170
00012c  d101              BNE      |L1.306|
00012e  f7fffffe          BL       App_StopRec
                  |L1.306|
000132  481f              LDR      r0,|L1.432|
000134  6900              LDR      r0,[r0,#0x10]         ;168
000136  2140              MOVS     r1,#0x40              ;168
000138  4008              ANDS     r0,r0,r1              ;168
00013a  2840              CMP      r0,#0x40              ;168
00013c  d1f3              BNE      |L1.294|
00013e  e005              B        |L1.332|
                  |L1.320|
000140  481b              LDR      r0,|L1.432|
000142  6900              LDR      r0,[r0,#0x10]         ;161
000144  2140              MOVS     r1,#0x40              ;161
000146  4008              ANDS     r0,r0,r1              ;161
000148  2840              CMP      r0,#0x40              ;161
00014a  d1e1              BNE      |L1.272|
                  |L1.332|
00014c  bf00              NOP                            ;173
00014e  4621              MOV      r1,r4                 ;177
000150  a030              ADR      r0,|L1.532|
000152  f7fffffe          BL       __2printf
000156  200a              MOVS     r0,#0xa               ;179
000158  f7fffffe          BL       delay_ms
00015c  2001              MOVS     r0,#1                 ;180
00015e  f7fffffe          BL       Record_KeypadHandler
000162  200a              MOVS     r0,#0xa               ;181
000164  f7fffffe          BL       delay_ms
000168  2c64              CMP      r4,#0x64              ;183
00016a  d207              BCS      |L1.380|
00016c  2200              MOVS     r2,#0                 ;185
00016e  2110              MOVS     r1,#0x10              ;185
000170  480f              LDR      r0,|L1.432|
000172  f7fffffe          BL       OutputPin_Set
000176  2000              MOVS     r0,#0                 ;186
000178  f7fffffe          BL       Playback_KeypadHandler
                  |L1.380|
00017c  bf00              NOP                            ;189
                  |L1.382|
00017e  bf00              NOP                            ;105
000180  2000              MOVS     r0,#0                 ;264
000182  4902              LDR      r1,|L1.396|
000184  7008              STRB     r0,[r1,#0]            ;264
000186  bf00              NOP      
000188  e741              B        |L1.14|
;;;266    void delay_ms(UINT32 ms)
                          ENDP

00018a  0000              DCW      0x0000
                  |L1.396|
                          DCD      IsRunning
                  |L1.400|
                          DCD      0x20000003
                  |L1.404|
                          DCD      0xeffffffd
                  |L1.408|
000198  54473352          DCB      "TG3R...\n\r",0
00019c  2e2e2e0a
0001a0  0d00    
0001a2  00                DCB      0
0001a3  00                DCB      0
                  |L1.420|
0001a4  54473346          DCB      "TG3F...\n\r",0
0001a8  2e2e2e0a
0001ac  0d00    
0001ae  00                DCB      0
0001af  00                DCB      0
                  |L1.432|
                          DCD      0x50004040
                  |L1.436|
0001b4  53746172          DCB      "Start play\n\r",0
0001b8  7420706c
0001bc  61790a0d
0001c0  00      
0001c1  00                DCB      0
0001c2  00                DCB      0
0001c3  00                DCB      0
                  |L1.452|
0001c4  54473452          DCB      "TG4R...\n\r",0
0001c8  2e2e2e0a
0001cc  0d00    
0001ce  00                DCB      0
0001cf  00                DCB      0
                  |L1.464|
0001d0  54473446          DCB      "TG4F...\n\r",0
0001d4  2e2e2e0a
0001d8  0d00    
0001da  00                DCB      0
0001db  00                DCB      0
                  |L1.476|
0001dc  53746172          DCB      "Start Rec.\n\r",0
0001e0  74205265
0001e4  632e0a0d
0001e8  00      
0001e9  00                DCB      0
0001ea  00                DCB      0
0001eb  00                DCB      0
                  |L1.492|
0001ec  53746f70          DCB      "Stop Rec.\n\r",0
0001f0  20526563
0001f4  2e0a0d00
                  |L1.504|
0001f8  54473552          DCB      "TG5R...\n\r",0
0001fc  2e2e2e0a
000200  0d00    
000202  00                DCB      0
000203  00                DCB      0
                  |L1.516|
000204  54473546          DCB      "TG5F...\n\r",0
000208  2e2e2e0a
00020c  0d00    
00020e  00                DCB      0
00020f  00                DCB      0
                  |L1.528|
                          DCD      playEndStatus
                  |L1.532|
000214  4b657935          DCB      "Key5 press for %d*10ms.\n\r",0
000218  20707265
00021c  73732066
000220  6f722025
000224  642a3130
000228  6d732e0a
00022c  0d00    
00022e  00                DCB      0
00022f  00                DCB      0

                          AREA ||i.Playback_KeypadHandler||, CODE, READONLY, ALIGN=2

                  Playback_KeypadHandler PROC
;;;53     
;;;54     void Playback_KeypadHandler(UINT32 u32Param)
000000  b510              PUSH     {r4,lr}
;;;55     {
000002  4604              MOV      r4,r0
;;;56     	if ( g_u8AppCtrl&APPCTRL_RECORD )
000004  4808              LDR      r0,|L2.40|
000006  7800              LDRB     r0,[r0,#0]  ; g_u8AppCtrl
000008  2104              MOVS     r1,#4
00000a  4008              ANDS     r0,r0,r1
00000c  2800              CMP      r0,#0
00000e  d000              BEQ      |L2.18|
                  |L2.16|
;;;57     	   return;
;;;58     // Comment by lambor
;;;59     //	if ( (g_u8AppCtrl&APPCTRL_PLAY) == 0 )
;;;60     //		App_StartPlay();
;;;61     //	else
;;;62     //		App_StopPlay();
;;;63     
;;;64     // Added by lambor
;;;65     	if (u32Param == 0 ) {
;;;66     		App_ReadVR();
;;;67     		App_StartPlay();
;;;68     	}
;;;69     	else
;;;70     		App_StopPlay();
;;;71     }
000010  bd10              POP      {r4,pc}
                  |L2.18|
000012  2c00              CMP      r4,#0                 ;65
000014  d104              BNE      |L2.32|
000016  f7fffffe          BL       App_ReadVR
00001a  f7fffffe          BL       App_StartPlay
00001e  e001              B        |L2.36|
                  |L2.32|
000020  f7fffffe          BL       App_StopPlay
                  |L2.36|
000024  bf00              NOP      
000026  e7f3              B        |L2.16|
;;;72     
                          ENDP

                  |L2.40|
                          DCD      g_u8AppCtrl

                          AREA ||i.PowerDown_KeypadHandler||, CODE, READONLY, ALIGN=1

                  PowerDown_KeypadHandler PROC
;;;72     
;;;73     void PowerDown_KeypadHandler(UINT32 u32Param)
000000  b510              PUSH     {r4,lr}
;;;74     {
000002  4604              MOV      r4,r0
;;;75     	App_PowerDown();
000004  f7fffffe          BL       App_PowerDown
;;;76     }
000008  bd10              POP      {r4,pc}
;;;77     
                          ENDP


                          AREA ||i.Record_KeypadHandler||, CODE, READONLY, ALIGN=2

                  Record_KeypadHandler PROC
;;;35     
;;;36     void Record_KeypadHandler(UINT32 u32Param)
000000  b510              PUSH     {r4,lr}
;;;37     {
000002  4604              MOV      r4,r0
;;;38     	if ( g_u8AppCtrl&(APPCTRL_PLAY|APPCTRL_PLAY_STOP) )
000004  4807              LDR      r0,|L4.36|
000006  7800              LDRB     r0,[r0,#0]  ; g_u8AppCtrl
000008  210a              MOVS     r1,#0xa
00000a  4008              ANDS     r0,r0,r1
00000c  2800              CMP      r0,#0
00000e  d000              BEQ      |L4.18|
                  |L4.16|
;;;39     		return;
;;;40     
;;;41     //Comment by lambor
;;;42     //	if ( (g_u8AppCtrl&APPCTRL_RECORD) ==0 )
;;;43     //		App_StartRec();
;;;44     //	else
;;;45     //		App_StopRec();
;;;46     
;;;47     //Added by lambor
;;;48     	if ( u32Param ==0 )
;;;49     		App_StartRec();
;;;50     	else
;;;51     		App_StopRec();
;;;52     }
000010  bd10              POP      {r4,pc}
                  |L4.18|
000012  2c00              CMP      r4,#0                 ;48
000014  d102              BNE      |L4.28|
000016  f7fffffe          BL       App_StartRec
00001a  e001              B        |L4.32|
                  |L4.28|
00001c  f7fffffe          BL       App_StopRec
                  |L4.32|
000020  bf00              NOP      
000022  e7f5              B        |L4.16|
;;;53     
                          ENDP

                  |L4.36|
                          DCD      g_u8AppCtrl

                          AREA ||i.delay_ms||, CODE, READONLY, ALIGN=1

                  delay_ms PROC
;;;265    }
;;;266    void delay_ms(UINT32 ms)
000000  b510              PUSH     {r4,lr}
;;;267    {
000002  4604              MOV      r4,r0
;;;268    	while(ms--)
000004  e003              B        |L5.14|
                  |L5.6|
;;;269    	{
;;;270    		CLK_SysTickDelay(1000);
000006  207d              MOVS     r0,#0x7d
000008  00c0              LSLS     r0,r0,#3
00000a  f7fffffe          BL       CLK_SysTickDelay
                  |L5.14|
00000e  4620              MOV      r0,r4                 ;268
000010  1e64              SUBS     r4,r4,#1              ;268
000012  2800              CMP      r0,#0                 ;268
000014  d1f7              BNE      |L5.6|
;;;271    	}
;;;272    }
000016  bd10              POP      {r4,pc}
                          ENDP


                          AREA ||.data||, DATA, ALIGN=0

                  IsRunning
000000  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\InputKeyActions.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___17_InputKeyActions_c_5b7e5dbb____REV16|
#line 118 "..\\..\\..\\..\\Library\\CMSIS\\Include\\core_cmInstr.h"
|__asm___17_InputKeyActions_c_5b7e5dbb____REV16| PROC
#line 119

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___17_InputKeyActions_c_5b7e5dbb____REVSH|
#line 132
|__asm___17_InputKeyActions_c_5b7e5dbb____REVSH| PROC
#line 133

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

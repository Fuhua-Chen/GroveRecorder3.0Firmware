; generated by Component: ARM Compiler 5.06 update 1 (build 61) Tool: ArmCC [4d35ad]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\object\nuoneexapp_encode.o --asm_dir=.\listing\ --list_dir=.\listing\ --depend=.\object\nuoneexapp_encode.d --cpu=Cortex-M0 --apcs=interwork -O0 --diag_suppress=9931 -I. -I..\..\..\..\Library\Device\Nuvoton\ISD9100\Include -I..\..\..\..\Library\Framework\inc -I..\..\..\..\Library\IO\inc -I..\..\..\..\Library\Audio\inc -I..\..\..\..\Library\StdDriver\inc -I..\..\..\..\Library\Storage\inc -I..\..\..\..\Library\CMSIS\Include -I..\ -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=518 -D__ISD9100__ --omf_browse=.\object\nuoneexapp_encode.crf ..\NuOneExApp\NuOneExApp_Encode.c]
                          THUMB

                          AREA ||i.NuOneExApp_EncodeEnd||, CODE, READONLY, ALIGN=1

                  NuOneExApp_EncodeEnd PROC
;;;82     
;;;83     void NuOneExApp_EncodeEnd(S_NUONEEX_APP_ENCODE *psNuOneExAppEncode)
000000  2121              MOVS     r1,#0x21
;;;84     {
;;;85     	BUF_CTRL_SET_INACTIVE(&psNuOneExAppEncode->sInBufCtrl);
000002  0189              LSLS     r1,r1,#6
000004  1841              ADDS     r1,r0,r1
000006  7a09              LDRB     r1,[r1,#8]
000008  2202              MOVS     r2,#2
00000a  4311              ORRS     r1,r1,r2
00000c  2221              MOVS     r2,#0x21
00000e  0192              LSLS     r2,r2,#6
000010  1882              ADDS     r2,r0,r2
000012  7211              STRB     r1,[r2,#8]
;;;86     }
000014  4770              BX       lr
                          ENDP


                          AREA ||i.NuOneExApp_EncodeInitiate||, CODE, READONLY, ALIGN=2

                  NuOneExApp_EncodeInitiate PROC
;;;4      
;;;5      void NuOneExApp_EncodeInitiate(S_NUONEEX_APP_ENCODE *psNuOneExAppEncode, UINT8 *pu8EncodeTempBuf)
000000  b570              PUSH     {r4-r6,lr}
;;;6      {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;7      	memset( psNuOneExAppEncode, '\0', sizeof(S_NUONEEX_APP_ENCODE) );
000006  490f              LDR      r1,|L2.68|
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       __aeabi_memclr4
;;;8      	
;;;9      	// Initiate buffer controlling variables for encoding
;;;10     	psNuOneExAppEncode->sEncodeBufCtrl.pi16Buf = (INT16*)psNuOneExAppEncode->au32EncodeBuf;
00000e  2029              MOVS     r0,#0x29
000010  0100              LSLS     r0,r0,#4
000012  1820              ADDS     r0,r4,r0
000014  490b              LDR      r1,|L2.68|
000016  3928              SUBS     r1,r1,#0x28
000018  1861              ADDS     r1,r4,r1
00001a  6048              STR      r0,[r1,#4]
;;;11     	psNuOneExAppEncode->sEncodeBufCtrl.u16SampleRate = 0;
00001c  2000              MOVS     r0,#0
00001e  4909              LDR      r1,|L2.68|
000020  3928              SUBS     r1,r1,#0x28
000022  1861              ADDS     r1,r4,r1
000024  8188              STRH     r0,[r1,#0xc]
;;;12     	psNuOneExAppEncode->pau8TempBuf = pu8EncodeTempBuf;
000026  2001              MOVS     r0,#1
000028  02c0              LSLS     r0,r0,#11
00002a  1820              ADDS     r0,r4,r0
00002c  6305              STR      r5,[r0,#0x30]
;;;13     	BUF_CTRL_SET_INACTIVE(&psNuOneExAppEncode->sInBufCtrl);
00002e  2021              MOVS     r0,#0x21
000030  0180              LSLS     r0,r0,#6
000032  1820              ADDS     r0,r4,r0
000034  7a00              LDRB     r0,[r0,#8]
000036  2102              MOVS     r1,#2
000038  4308              ORRS     r0,r0,r1
00003a  2121              MOVS     r1,#0x21
00003c  0189              LSLS     r1,r1,#6
00003e  1861              ADDS     r1,r4,r1
000040  7208              STRB     r0,[r1,#8]
;;;14     }
000042  bd70              POP      {r4-r6,pc}
;;;15     
                          ENDP

                  |L2.68|
                          DCD      0x0000085c

                          AREA ||i.NuOneExApp_EncodeProcess||, CODE, READONLY, ALIGN=2

                  NuOneExApp_EncodeProcess PROC
;;;52     
;;;53     BOOL NuOneExApp_EncodeProcess(S_NUONEEX_APP_ENCODE *psNuOneExAppEncode)
000000  b5f8              PUSH     {r3-r7,lr}
;;;54     {
000002  4605              MOV      r5,r0
;;;55     	UINT32 u32DataLength;
;;;56     	S_BUF_CTRL *psEncodeBufCtrl, *psInBufCtrl;
;;;57     
;;;58     	if (BUF_CTRL_IS_INACTIVE(&psNuOneExAppEncode->sInBufCtrl))
000004  2021              MOVS     r0,#0x21
000006  0180              LSLS     r0,r0,#6
000008  1828              ADDS     r0,r5,r0
00000a  7a00              LDRB     r0,[r0,#8]
00000c  2102              MOVS     r1,#2
00000e  4008              ANDS     r0,r0,r1
000010  2800              CMP      r0,#0
000012  d001              BEQ      |L3.24|
;;;59     		return FALSE;
000014  2000              MOVS     r0,#0
                  |L3.22|
;;;60     	
;;;61     	psEncodeBufCtrl = &psNuOneExAppEncode->sEncodeBufCtrl;
;;;62     	psInBufCtrl = &psNuOneExAppEncode->sInBufCtrl;
;;;63     
;;;64     	while(( psInBufCtrl->u16BufReadIdx > psInBufCtrl->u16BufWriteIdx )|| 
;;;65     		(( psInBufCtrl->u16BufWriteIdx - psInBufCtrl->u16BufReadIdx)>= NUONEEX_ENCODE_SAMPLE_PER_FRAME))
;;;66     	{
;;;67     		// Process encoding and return encoded length
;;;68     		u32DataLength = NuOneEx_EncodeProcess((UINT8 *)psNuOneExAppEncode->au32WorkBuf, psNuOneExAppEncode->pau8TempBuf,
;;;69     			psInBufCtrl->pi16Buf + psInBufCtrl->u16BufReadIdx,
;;;70     			((INT8*)(psEncodeBufCtrl->pi16Buf)) + psEncodeBufCtrl->u16BufWriteIdx );
;;;71     		
;;;72     		// Update write index of encoded buffer
;;;73     		if ((psEncodeBufCtrl->u16BufWriteIdx+=u32DataLength) >= psNuOneExAppEncode->sEncodeBufCtrl.u16BufCount)
;;;74     			psEncodeBufCtrl->u16BufWriteIdx = 0;
;;;75     		
;;;76     		// Update read index of ADC input buffer
;;;77     		if ((psInBufCtrl->u16BufReadIdx+=NUONEEX_ENCODE_SAMPLE_PER_FRAME) >= NUONEEXAPP_IN_BUF_SIZE)
;;;78     			psInBufCtrl->u16BufReadIdx = 0;
;;;79     	}
;;;80     	return TRUE;
;;;81     }
000016  bdf8              POP      {r3-r7,pc}
                  |L3.24|
000018  481c              LDR      r0,|L3.140|
00001a  182e              ADDS     r6,r5,r0              ;61
00001c  481b              LDR      r0,|L3.140|
00001e  3014              ADDS     r0,r0,#0x14           ;62
000020  182c              ADDS     r4,r5,r0              ;62
000022  e026              B        |L3.114|
                  |L3.36|
000024  8971              LDRH     r1,[r6,#0xa]          ;68
000026  6870              LDR      r0,[r6,#4]            ;68
000028  1843              ADDS     r3,r0,r1              ;68
00002a  8921              LDRH     r1,[r4,#8]            ;68
00002c  0049              LSLS     r1,r1,#1              ;68
00002e  6860              LDR      r0,[r4,#4]            ;68
000030  1842              ADDS     r2,r0,r1              ;68
000032  2001              MOVS     r0,#1                 ;68
000034  02c0              LSLS     r0,r0,#11             ;68
000036  1828              ADDS     r0,r5,r0              ;68
000038  6b00              LDR      r0,[r0,#0x30]         ;68
00003a  4601              MOV      r1,r0                 ;68
00003c  9000              STR      r0,[sp,#0]            ;68
00003e  4628              MOV      r0,r5                 ;68
000040  f7fffffe          BL       NuOneEx_EncodeProcess
000044  4607              MOV      r7,r0                 ;68
000046  8971              LDRH     r1,[r6,#0xa]          ;73
000048  19c8              ADDS     r0,r1,r7              ;73
00004a  b280              UXTH     r0,r0                 ;73
00004c  8170              STRH     r0,[r6,#0xa]          ;73
00004e  490f              LDR      r1,|L3.140|
000050  1869              ADDS     r1,r5,r1              ;73
000052  8849              LDRH     r1,[r1,#2]            ;73
000054  4288              CMP      r0,r1                 ;73
000056  db01              BLT      |L3.92|
000058  2000              MOVS     r0,#0                 ;74
00005a  8170              STRH     r0,[r6,#0xa]          ;74
                  |L3.92|
00005c  8920              LDRH     r0,[r4,#8]            ;77
00005e  30ff              ADDS     r0,r0,#0xff           ;77
000060  3041              ADDS     r0,r0,#0x41           ;77
000062  b280              UXTH     r0,r0                 ;77
000064  8120              STRH     r0,[r4,#8]            ;77
000066  2105              MOVS     r1,#5                 ;77
000068  01c9              LSLS     r1,r1,#7              ;77
00006a  4288              CMP      r0,r1                 ;77
00006c  db01              BLT      |L3.114|
00006e  2000              MOVS     r0,#0                 ;78
000070  8120              STRH     r0,[r4,#8]            ;78
                  |L3.114|
000072  8920              LDRH     r0,[r4,#8]            ;64
000074  8961              LDRH     r1,[r4,#0xa]          ;64
000076  4288              CMP      r0,r1                 ;64
000078  dcd4              BGT      |L3.36|
00007a  8960              LDRH     r0,[r4,#0xa]          ;65
00007c  8921              LDRH     r1,[r4,#8]            ;65
00007e  1a40              SUBS     r0,r0,r1              ;65
000080  21ff              MOVS     r1,#0xff              ;65
000082  3141              ADDS     r1,r1,#0x41           ;65
000084  4288              CMP      r0,r1                 ;65
000086  dacd              BGE      |L3.36|
000088  2001              MOVS     r0,#1                 ;80
00008a  e7c4              B        |L3.22|
;;;82     
                          ENDP

                  |L3.140|
                          DCD      0x00000834

                          AREA ||i.NuOneExApp_EncodeStart||, CODE, READONLY, ALIGN=2

                  NuOneExApp_EncodeStart PROC
;;;15     
;;;16     BOOL NuOneExApp_EncodeStart(S_NUONEEX_APP_ENCODE *psNuOneExAppEncode, S_AUDIOCHUNK_HEADER *psAudioChunkHeader,
000000  b5f8              PUSH     {r3-r7,lr}
;;;17     							UINT16 u16SampleRate, enum eNuOneExEncodeBPS eBitPerSample)
;;;18     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4616              MOV      r6,r2
000008  461f              MOV      r7,r3
;;;19     	if ( (eBitPerSample > NUONEEXAPP_ENCODE_MAX_BITRATE) || (u16SampleRate == 0) )
00000a  2005              MOVS     r0,#5
00000c  01c0              LSLS     r0,r0,#7
00000e  4287              CMP      r7,r0
000010  dc01              BGT      |L4.22|
000012  2e00              CMP      r6,#0
000014  d101              BNE      |L4.26|
                  |L4.22|
;;;20     		return FALSE;
000016  2000              MOVS     r0,#0
                  |L4.24|
;;;21     	else
;;;22     	{
;;;23     		psAudioChunkHeader->u16SmplRate = u16SampleRate;
;;;24     		psAudioChunkHeader->u32BitPerFrame = eBitPerSample;
;;;25     	}
;;;26     	
;;;27     	// NuOneEx encoder initiates work buffer.
;;;28     	// Set bit rate and sample rate information for audio chunk header.
;;;29     	NuOneEx_EncodeInitiate((UINT8 *)psNuOneExAppEncode->au32WorkBuf, psNuOneExAppEncode->pau8TempBuf, 
;;;30     		psAudioChunkHeader, (enum eNuOneExEncodeBPS)psAudioChunkHeader->u32BitPerFrame, psAudioChunkHeader->u16SmplRate);
;;;31     
;;;32     	// Reset encode buffer read index and write index
;;;33     	psNuOneExAppEncode->sEncodeBufCtrl.u16BufWriteIdx = 0;
;;;34     	psNuOneExAppEncode->sEncodeBufCtrl.u16BufReadIdx = 0;
;;;35     	
;;;36     	// Set Encoded frame size, Storage Utility will refer to this size to write data.
;;;37     	psNuOneExAppEncode->sEncodeBufCtrl.u16FrameSize =  (psAudioChunkHeader->u32BitPerFrame)>>3;
;;;38     	psNuOneExAppEncode->sEncodeBufCtrl.u16BufCount = (psNuOneExAppEncode->sEncodeBufCtrl.u16FrameSize)*NUONEEXAPP_ENCODE_BUF_COUNT;
;;;39     
;;;40     	// Set input buffer size, PCM buffer pointer, frame size and sample rate.
;;;41     	Record_SetInBufRecord(  &psNuOneExAppEncode->sInBufCtrl, 
;;;42     							NUONEEXAPP_IN_BUF_SIZE,
;;;43     							psNuOneExAppEncode->i16InBuf,
;;;44     							NUONEEX_ENCODE_SAMPLE_PER_FRAME,
;;;45     							psAudioChunkHeader->u16SmplRate);
;;;46     	
;;;47     	// Set application input buffer to record(ADC) output buffer.
;;;48     	Record_Add(&psNuOneExAppEncode->sInBufCtrl, psAudioChunkHeader->u16SmplRate);
;;;49     	
;;;50     	return TRUE;
;;;51     }
000018  bdf8              POP      {r3-r7,pc}
                  |L4.26|
00001a  806e              STRH     r6,[r5,#2]            ;23
00001c  60af              STR      r7,[r5,#8]            ;24
00001e  8868              LDRH     r0,[r5,#2]            ;29
000020  9000              STR      r0,[sp,#0]            ;29
000022  8928              LDRH     r0,[r5,#8]            ;29
000024  b283              UXTH     r3,r0                 ;29
000026  2001              MOVS     r0,#1                 ;29
000028  02c0              LSLS     r0,r0,#11             ;29
00002a  1820              ADDS     r0,r4,r0              ;29
00002c  462a              MOV      r2,r5                 ;29
00002e  6b01              LDR      r1,[r0,#0x30]         ;29
000030  4620              MOV      r0,r4                 ;29
000032  f7fffffe          BL       NuOneEx_EncodeInitiate
000036  2000              MOVS     r0,#0                 ;33
000038  4914              LDR      r1,|L4.140|
00003a  1861              ADDS     r1,r4,r1              ;33
00003c  8148              STRH     r0,[r1,#0xa]          ;33
00003e  4913              LDR      r1,|L4.140|
000040  1861              ADDS     r1,r4,r1              ;34
000042  8108              STRH     r0,[r1,#8]            ;34
000044  68a8              LDR      r0,[r5,#8]            ;37
000046  0340              LSLS     r0,r0,#13             ;37
000048  0c00              LSRS     r0,r0,#16             ;37
00004a  4910              LDR      r1,|L4.140|
00004c  1861              ADDS     r1,r4,r1              ;37
00004e  81c8              STRH     r0,[r1,#0xe]          ;37
000050  480e              LDR      r0,|L4.140|
000052  1820              ADDS     r0,r4,r0              ;38
000054  89c0              LDRH     r0,[r0,#0xe]          ;38
000056  0440              LSLS     r0,r0,#17             ;38
000058  0c00              LSRS     r0,r0,#16             ;38
00005a  490c              LDR      r1,|L4.140|
00005c  1861              ADDS     r1,r4,r1              ;38
00005e  8048              STRH     r0,[r1,#2]            ;38
000060  8868              LDRH     r0,[r5,#2]            ;41
000062  23ff              MOVS     r3,#0xff              ;41
000064  3341              ADDS     r3,r3,#0x41           ;41
000066  9000              STR      r0,[sp,#0]            ;41
000068  2033              MOVS     r0,#0x33              ;41
00006a  0100              LSLS     r0,r0,#4              ;41
00006c  1822              ADDS     r2,r4,r0              ;41
00006e  0059              LSLS     r1,r3,#1              ;41
000070  4806              LDR      r0,|L4.140|
000072  3014              ADDS     r0,r0,#0x14           ;41
000074  1820              ADDS     r0,r4,r0              ;41
000076  f7fffffe          BL       Record_SetInBufRecord
00007a  8869              LDRH     r1,[r5,#2]            ;48
00007c  4803              LDR      r0,|L4.140|
00007e  3014              ADDS     r0,r0,#0x14           ;48
000080  1820              ADDS     r0,r4,r0              ;48
000082  f7fffffe          BL       Record_Add
000086  2001              MOVS     r0,#1                 ;50
000088  e7c6              B        |L4.24|
;;;52     
                          ENDP

00008a  0000              DCW      0x0000
                  |L4.140|
                          DCD      0x00000834

;*** Start embedded assembler ***

#line 1 "..\\NuOneExApp\\NuOneExApp_Encode.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___19_NuOneExApp_Encode_c_c1876fee____REV16|
#line 118 "..\\..\\..\\..\\Library\\CMSIS\\Include\\core_cmInstr.h"
|__asm___19_NuOneExApp_Encode_c_c1876fee____REV16| PROC
#line 119

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___19_NuOneExApp_Encode_c_c1876fee____REVSH|
#line 132
|__asm___19_NuOneExApp_Encode_c_c1876fee____REVSH| PROC
#line 133

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

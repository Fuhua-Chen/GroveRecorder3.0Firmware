; generated by Component: ARM Compiler 5.06 update 1 (build 61) Tool: ArmCC [4d35ad]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\object\wdt.o --asm_dir=.\listing\ --list_dir=.\listing\ --depend=.\object\wdt.d --cpu=Cortex-M0 --apcs=interwork -O0 --diag_suppress=9931 -I. -I..\..\..\..\Library\Device\Nuvoton\ISD9100\Include -I..\..\..\..\Library\Framework\inc -I..\..\..\..\Library\IO\inc -I..\..\..\..\Library\Audio\inc -I..\..\..\..\Library\StdDriver\inc -I..\..\..\..\Library\Storage\inc -I..\..\..\..\Library\CMSIS\Include -I..\ -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=518 -D__ISD9100__ --omf_browse=.\object\wdt.crf ..\..\..\..\Library\StdDriver\src\wdt.c]
                          THUMB

                          AREA ||i.WDT_ClearResetFlag||, CODE, READONLY, ALIGN=2

                  WDT_ClearResetFlag PROC
;;;84       */
;;;85     void WDT_ClearResetFlag(void)
000000  b510              PUSH     {r4,lr}
;;;86     {
;;;87     	uint8_t u8Lock = SYS_Unlock();	
000002  f7fffffe          BL       SYS_Unlock
000006  4604              MOV      r4,r0
;;;88     	WDT->CTL = (WDT->CTL & ~WDT_CTL_IF_Msk) | WDT_CTL_RSTF_Msk;
000008  4805              LDR      r0,|L1.32|
00000a  6800              LDR      r0,[r0,#0]
00000c  2108              MOVS     r1,#8
00000e  4388              BICS     r0,r0,r1
000010  2104              MOVS     r1,#4
000012  4308              ORRS     r0,r0,r1
000014  4902              LDR      r1,|L1.32|
000016  6008              STR      r0,[r1,#0]
;;;89         SYS_Lock(u8Lock);
000018  4620              MOV      r0,r4
00001a  f7fffffe          BL       SYS_Lock
;;;90     }
00001e  bd10              POP      {r4,pc}
;;;91     
                          ENDP

                  |L1.32|
                          DCD      0x40004000

                          AREA ||i.WDT_ClearTimeOutIntFlag||, CODE, READONLY, ALIGN=2

                  WDT_ClearTimeOutIntFlag PROC
;;;95       */
;;;96     void WDT_ClearTimeOutIntFlag(void)
000000  b510              PUSH     {r4,lr}
;;;97     {
;;;98     	uint8_t u8Lock = SYS_Unlock();	
000002  f7fffffe          BL       SYS_Unlock
000006  4604              MOV      r4,r0
;;;99     	WDT->CTL = (WDT->CTL & ~WDT_CTL_RSTF_Msk) | WDT_CTL_IF_Msk;	
000008  4805              LDR      r0,|L2.32|
00000a  6800              LDR      r0,[r0,#0]
00000c  2104              MOVS     r1,#4
00000e  4388              BICS     r0,r0,r1
000010  2108              MOVS     r1,#8
000012  4308              ORRS     r0,r0,r1
000014  4902              LDR      r1,|L2.32|
000016  6008              STR      r0,[r1,#0]
;;;100    	SYS_Lock(u8Lock);
000018  4620              MOV      r0,r4
00001a  f7fffffe          BL       SYS_Lock
;;;101    }
00001e  bd10              POP      {r4,pc}
;;;102    
                          ENDP

                  |L2.32|
                          DCD      0x40004000

                          AREA ||i.WDT_Close||, CODE, READONLY, ALIGN=2

                  WDT_Close PROC
;;;50      */
;;;51     void WDT_Close(void)
000000  b510              PUSH     {r4,lr}
;;;52     {
;;;53     	uint8_t u8Lock = SYS_Unlock();	
000002  f7fffffe          BL       SYS_Unlock
000006  4604              MOV      r4,r0
;;;54         WDT->CTL = 0;
000008  2000              MOVS     r0,#0
00000a  4903              LDR      r1,|L3.24|
00000c  6008              STR      r0,[r1,#0]
;;;55     	SYS_Lock(u8Lock);
00000e  4620              MOV      r0,r4
000010  f7fffffe          BL       SYS_Lock
;;;56     }
000014  bd10              POP      {r4,pc}
;;;57     
                          ENDP

000016  0000              DCW      0x0000
                  |L3.24|
                          DCD      0x40004000

                          AREA ||i.WDT_DisableInt||, CODE, READONLY, ALIGN=2

                  WDT_DisableInt PROC
;;;72      */
;;;73     void WDT_DisableInt(void)
000000  b510              PUSH     {r4,lr}
;;;74     {
;;;75     	uint8_t u8Lock = SYS_Unlock();	
000002  f7fffffe          BL       SYS_Unlock
000006  4604              MOV      r4,r0
;;;76         // Do not touch write 1 clear bits
;;;77         WDT->CTL &= ~(WDT_CTL_INTEN_Msk | WDT_CTL_RSTF_Msk | WDT_CTL_IF_Msk) ;
000008  4804              LDR      r0,|L4.28|
00000a  6800              LDR      r0,[r0,#0]
00000c  214c              MOVS     r1,#0x4c
00000e  4388              BICS     r0,r0,r1
000010  4902              LDR      r1,|L4.28|
000012  6008              STR      r0,[r1,#0]
;;;78         SYS_Lock(u8Lock);
000014  4620              MOV      r0,r4
000016  f7fffffe          BL       SYS_Lock
;;;79     }
00001a  bd10              POP      {r4,pc}
;;;80     
                          ENDP

                  |L4.28|
                          DCD      0x40004000

                          AREA ||i.WDT_EnableInt||, CODE, READONLY, ALIGN=2

                  WDT_EnableInt PROC
;;;61      */
;;;62     void WDT_EnableInt(void)
000000  b510              PUSH     {r4,lr}
;;;63     {
;;;64     	uint8_t u8Lock = SYS_Unlock();	
000002  f7fffffe          BL       SYS_Unlock
000006  4604              MOV      r4,r0
;;;65         WDT->CTL |= WDT_CTL_INTEN_Msk;
000008  4804              LDR      r0,|L5.28|
00000a  6800              LDR      r0,[r0,#0]
00000c  2140              MOVS     r1,#0x40
00000e  4308              ORRS     r0,r0,r1
000010  4902              LDR      r1,|L5.28|
000012  6008              STR      r0,[r1,#0]
;;;66         SYS_Lock(u8Lock);
000014  4620              MOV      r0,r4
000016  f7fffffe          BL       SYS_Lock
;;;67     }
00001a  bd10              POP      {r4,pc}
;;;68     
                          ENDP

                  |L5.28|
                          DCD      0x40004000

                          AREA ||i.WDT_Open||, CODE, READONLY, ALIGN=2

                  WDT_Open PROC
;;;39      */
;;;40     void  WDT_Open( uint32_t u32TimeoutInterval, uint32_t u32EnableReset )
000000  b570              PUSH     {r4-r6,lr}
;;;41     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;42     	uint8_t u8Lock = SYS_Unlock();
000006  f7fffffe          BL       SYS_Unlock
00000a  4606              MOV      r6,r0
;;;43         WDT->CTL = u32TimeoutInterval | WDT_CTL_WDTEN_Msk |(u32EnableReset << WDT_CTL_RSTEN_Pos) ;
00000c  4620              MOV      r0,r4
00000e  2180              MOVS     r1,#0x80
000010  4308              ORRS     r0,r0,r1
000012  0069              LSLS     r1,r5,#1
000014  4308              ORRS     r0,r0,r1
000016  4903              LDR      r1,|L6.36|
000018  6008              STR      r0,[r1,#0]
;;;44     	SYS_Lock(u8Lock);
00001a  4630              MOV      r0,r6
00001c  f7fffffe          BL       SYS_Lock
;;;45     }
000020  bd70              POP      {r4-r6,pc}
;;;46     
                          ENDP

000022  0000              DCW      0x0000
                  |L6.36|
                          DCD      0x40004000

                          AREA ||i.WDT_ResetCounter||, CODE, READONLY, ALIGN=2

                  WDT_ResetCounter PROC
;;;107      */
;;;108    void WDT_ResetCounter(void)
000000  b510              PUSH     {r4,lr}
;;;109    {
;;;110    	uint8_t u8Lock = SYS_Unlock();
000002  f7fffffe          BL       SYS_Unlock
000006  4604              MOV      r4,r0
;;;111    	WDT->CTL  = (WDT->CTL & ~(WDT_CTL_IF_Msk | WDT_CTL_RSTF_Msk)) | WDT_CTL_RSTCNT_Msk;
000008  4805              LDR      r0,|L7.32|
00000a  6800              LDR      r0,[r0,#0]
00000c  210c              MOVS     r1,#0xc
00000e  4388              BICS     r0,r0,r1
000010  2101              MOVS     r1,#1
000012  4308              ORRS     r0,r0,r1
000014  4902              LDR      r1,|L7.32|
000016  6008              STR      r0,[r1,#0]
;;;112    	SYS_Lock(u8Lock);
000018  4620              MOV      r0,r4
00001a  f7fffffe          BL       SYS_Lock
;;;113    }
00001e  bd10              POP      {r4,pc}
;;;114    
                          ENDP

                  |L7.32|
                          DCD      0x40004000

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\..\\Library\\StdDriver\\src\\wdt.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_wdt_c_WDT_Open____REV16|
#line 118 "..\\..\\..\\..\\Library\\CMSIS\\Include\\core_cmInstr.h"
|__asm___5_wdt_c_WDT_Open____REV16| PROC
#line 119

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_wdt_c_WDT_Open____REVSH|
#line 132
|__asm___5_wdt_c_WDT_Open____REVSH| PROC
#line 133

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

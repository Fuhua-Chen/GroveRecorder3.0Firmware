; generated by Component: ARM Compiler 5.06 update 1 (build 61) Tool: ArmCC [4d35ad]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\object\record.o --asm_dir=.\listing\ --list_dir=.\listing\ --depend=.\object\record.d --cpu=Cortex-M0 --apcs=interwork -O0 --diag_suppress=9931 -I. -I..\..\..\..\Library\Device\Nuvoton\ISD9100\Include -I..\..\..\..\Library\Framework\inc -I..\..\..\..\Library\IO\inc -I..\..\..\..\Library\Audio\inc -I..\..\..\..\Library\StdDriver\inc -I..\..\..\..\Library\Storage\inc -I..\..\..\..\Library\CMSIS\Include -I..\ -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=518 -D__ISD9100__ --omf_browse=.\object\record.crf ..\..\..\..\Library\Framework\src\Record.c]
                          THUMB

                          AREA ||i.Record_Add||, CODE, READONLY, ALIGN=2

                  Record_Add PROC
;;;82     
;;;83     void Record_Add(
000000  b570              PUSH     {r4-r6,lr}
;;;84     	S_BUF_CTRL *psAdcBufCtrl,
;;;85     	UINT32 u32SampleRate
;;;86     )
;;;87     {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;88     	g_psAdcBufCtrl = psAdcBufCtrl;
000006  4804              LDR      r0,|L1.24|
000008  6005              STR      r5,[r0,#0]  ; g_psAdcBufCtrl
;;;89     	if ( u32SampleRate )
00000a  2c00              CMP      r4,#0
00000c  d002              BEQ      |L1.20|
;;;90     		MIC_ChangeSR(u32SampleRate);
00000e  4620              MOV      r0,r4
000010  f7fffffe          BL       MIC_ChangeSR
                  |L1.20|
;;;91     }
000014  bd70              POP      {r4-r6,pc}
;;;92     /************************************************************************************************************
                          ENDP

000016  0000              DCW      0x0000
                  |L1.24|
                          DCD      g_psAdcBufCtrl

                          AREA ||i.Record_Process||, CODE, READONLY, ALIGN=2

                  Record_Process PROC
;;;23     //-----------------------------------------------------------------------------------------------------------
;;;24     void Record_Process(PINT16 pi16Buff)
000000  b510              PUSH     {r4,lr}
;;;25     {
000002  4604              MOV      r4,r0
;;;26     	
;;;27     	#if ((ADC_FILTER_ENABLE == 1)&&(ADC_DOWNSAMPLE==2))
;;;28     	#define ADC_SAMPLES_COUNT	4
;;;29     	INT16 *pi16inBuf;
;;;30     	pi16inBuf = &g_psAdcBufCtrl->pi16Buf[g_psAdcBufCtrl->u16BufWriteIdx];
;;;31     	pi16inBuf[0] = NoiseFilter_IIR2(s_pi16AdcBuf[0]);
;;;32     	NoiseFilter_IIR2(s_pi16AdcBuf[1]);
;;;33     	
;;;34     	pi16inBuf[1] = NoiseFilter_IIR2(s_pi16AdcBuf[2]);
;;;35     	NoiseFilter_IIR2(s_pi16AdcBuf[3]);
;;;36     	
;;;37     	pi16inBuf[2] = NoiseFilter_IIR2(s_pi16AdcBuf[4]);
;;;38     	NoiseFilter_IIR2(s_pi16AdcBuf[5]);
;;;39     	
;;;40     	pi16inBuf[3] = NoiseFilter_IIR2(s_pi16AdcBuf[6]);
;;;41     	NoiseFilter_IIR2(s_pi16AdcBuf[7]);
;;;42     	
;;;43     	#elif ((ADC_FILTER_ENABLE == 1)&&(ADC_DOWNSAMPLE==4))
;;;44     	#define ADC_SAMPLES_COUNT	2
;;;45     	INT16 *pi16inBuf;
;;;46     	pi16inBuf = &g_psAdcBufCtrl->pi16Buf[g_psAdcBufCtrl->u16BufWriteIdx];
;;;47     	
;;;48     	pi16inBuf[0] = NoiseFilter_IIR2(s_pi16AdcBuf[0]);
;;;49     	NoiseFilter_IIR2(s_pi16AdcBuf[1]);
;;;50     	NoiseFilter_IIR2(s_pi16AdcBuf[2]);
;;;51     	NoiseFilter_IIR2(s_pi16AdcBuf[3]);
;;;52     	
;;;53     	pi16inBuf[1] = NoiseFilter_IIR2(s_pi16AdcBuf[4]);
;;;54     	NoiseFilter_IIR2(s_pi16AdcBuf[5]);
;;;55     	NoiseFilter_IIR2(s_pi16AdcBuf[6]);
;;;56     	NoiseFilter_IIR2(s_pi16AdcBuf[7]);
;;;57     	#else
;;;58     	#define ADC_SAMPLES_COUNT	8
;;;59     		
;;;60     	#endif
;;;61     	
;;;62     	if ( BUF_CTRL_ISNOT_CALLBACK(g_psAdcBufCtrl))
000004  481b              LDR      r0,|L2.116|
000006  6800              LDR      r0,[r0,#0]  ; g_psAdcBufCtrl
000008  7800              LDRB     r0,[r0,#0]
00000a  07c0              LSLS     r0,r0,#31
00000c  0fc0              LSRS     r0,r0,#31
00000e  2800              CMP      r0,#0
000010  d11d              BNE      |L2.78|
;;;63     	{
;;;64     		g_psAdcBufCtrl->u16BufWriteIdx += ADC_SAMPLES_COUNT;
000012  4818              LDR      r0,|L2.116|
000014  6800              LDR      r0,[r0,#0]  ; g_psAdcBufCtrl
000016  8940              LDRH     r0,[r0,#0xa]
000018  3008              ADDS     r0,r0,#8
00001a  4916              LDR      r1,|L2.116|
00001c  6809              LDR      r1,[r1,#0]  ; g_psAdcBufCtrl
00001e  8148              STRH     r0,[r1,#0xa]
;;;65     		if ( g_psAdcBufCtrl->u16BufWriteIdx >= g_psAdcBufCtrl->u16BufCount )
000020  4814              LDR      r0,|L2.116|
000022  6800              LDR      r0,[r0,#0]  ; g_psAdcBufCtrl
000024  8940              LDRH     r0,[r0,#0xa]
000026  4913              LDR      r1,|L2.116|
000028  6809              LDR      r1,[r1,#0]  ; g_psAdcBufCtrl
00002a  8849              LDRH     r1,[r1,#2]
00002c  4288              CMP      r0,r1
00002e  db03              BLT      |L2.56|
;;;66     			g_psAdcBufCtrl->u16BufWriteIdx = 0;
000030  2000              MOVS     r0,#0
000032  4910              LDR      r1,|L2.116|
000034  6809              LDR      r1,[r1,#0]  ; g_psAdcBufCtrl
000036  8148              STRH     r0,[r1,#0xa]
                  |L2.56|
;;;67     		
;;;68     		#if (ADC_FILTER_ENABLE != 1)
;;;69     		s_pi16AdcBuf = &g_psAdcBufCtrl->pi16Buf[g_psAdcBufCtrl->u16BufWriteIdx];
000038  480e              LDR      r0,|L2.116|
00003a  6800              LDR      r0,[r0,#0]  ; g_psAdcBufCtrl
00003c  6840              LDR      r0,[r0,#4]
00003e  490d              LDR      r1,|L2.116|
000040  6809              LDR      r1,[r1,#0]  ; g_psAdcBufCtrl
000042  8949              LDRH     r1,[r1,#0xa]
000044  0049              LSLS     r1,r1,#1
000046  1840              ADDS     r0,r0,r1
000048  490b              LDR      r1,|L2.120|
00004a  6008              STR      r0,[r1,#0]  ; s_pi16AdcBuf
00004c  e009              B        |L2.98|
                  |L2.78|
;;;70     		#endif
;;;71     	}
;;;72     	else
;;;73     	{
;;;74     		((S_BUF_CTRL_CALLBACK*)g_psAdcBufCtrl)->pfnFunc(((S_BUF_CTRL_CALLBACK*)g_psAdcBufCtrl)->pu8Param, ADC_SAMPLES_COUNT, s_pi16AdcBuf);
00004e  4909              LDR      r1,|L2.116|
000050  6809              LDR      r1,[r1,#0]  ; g_psAdcBufCtrl
000052  6888              LDR      r0,[r1,#8]
000054  4907              LDR      r1,|L2.116|
000056  6809              LDR      r1,[r1,#0]  ; g_psAdcBufCtrl
000058  684b              LDR      r3,[r1,#4]
00005a  4907              LDR      r1,|L2.120|
00005c  680a              LDR      r2,[r1,#0]  ; s_pi16AdcBuf
00005e  2108              MOVS     r1,#8
000060  4798              BLX      r3
                  |L2.98|
;;;75     	}	
;;;76     	
;;;77     	#if (ADC_PDMA_ENABLE == 1)
;;;78     	PdmaCtrl_Start(ADC_PDMA_CH, (uint32_t *)&ADC->DAT, (uint32_t *)s_pi16AdcBuf, 8);
000062  2308              MOVS     r3,#8
000064  4804              LDR      r0,|L2.120|
000066  4905              LDR      r1,|L2.124|
000068  6802              LDR      r2,[r0,#0]  ; s_pi16AdcBuf
00006a  2000              MOVS     r0,#0
00006c  f7fffffe          BL       PdmaCtrl_Start
;;;79     	#endif
;;;80     
;;;81     }
000070  bd10              POP      {r4,pc}
;;;82     
                          ENDP

000072  0000              DCW      0x0000
                  |L2.116|
                          DCD      g_psAdcBufCtrl
                  |L2.120|
                          DCD      s_pi16AdcBuf
                  |L2.124|
                          DCD      0x400e0000

                          AREA ||i.Record_SetInBufCallback||, CODE, READONLY, ALIGN=1

                  Record_SetInBufCallback PROC
;;;141    void 
;;;142    Record_SetInBufCallback(
000000  b510              PUSH     {r4,lr}
;;;143    	S_BUF_CTRL_CALLBACK *psInBufCtrl,
;;;144    	PFN_DATA_REQUEST_CALLBACK pfnSetIntputData,
;;;145    	void* pWorkBuf
;;;146    )
;;;147    {
;;;148    	BUF_CTRL_SET_CALLBACK(psInBufCtrl);
000002  7803              LDRB     r3,[r0,#0]
000004  2401              MOVS     r4,#1
000006  4323              ORRS     r3,r3,r4
000008  7003              STRB     r3,[r0,#0]
;;;149    	psInBufCtrl->pfnFunc = pfnSetIntputData;
00000a  6041              STR      r1,[r0,#4]
;;;150    	psInBufCtrl->pu8Param = pWorkBuf;
00000c  6082              STR      r2,[r0,#8]
;;;151    	BUF_CTRL_SET_ACTIVE(psInBufCtrl);
00000e  7803              LDRB     r3,[r0,#0]
000010  2402              MOVS     r4,#2
000012  43a3              BICS     r3,r3,r4
000014  7003              STRB     r3,[r0,#0]
;;;152    }
000016  bd10              POP      {r4,pc}
;;;153    
                          ENDP


                          AREA ||i.Record_SetInBufRecord||, CODE, READONLY, ALIGN=1

                  Record_SetInBufRecord PROC
;;;161    void 
;;;162    Record_SetInBufRecord(
000000  b5f8              PUSH     {r3-r7,lr}
;;;163    	S_BUF_CTRL* psInBufCtrl,
;;;164    	UINT16 u16BufSize,
;;;165    	INT16* pi16Buf,
;;;166    	UINT16 u16FrameSize,
;;;167    	UINT16 u16SampleRate
;;;168    )
;;;169    {
000002  4604              MOV      r4,r0
000004  460e              MOV      r6,r1
000006  4617              MOV      r7,r2
000008  461d              MOV      r5,r3
;;;170    	memset(psInBufCtrl,0,sizeof(S_BUF_CTRL));
00000a  2114              MOVS     r1,#0x14
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       __aeabi_memclr4
;;;171    	psInBufCtrl->u8Flag = S_BUF_CTRL_FLAG_BUF;
000012  2000              MOVS     r0,#0
000014  7020              STRB     r0,[r4,#0]
;;;172    	psInBufCtrl->u16BufCount = u16BufSize;
000016  8066              STRH     r6,[r4,#2]
;;;173    	psInBufCtrl->pi16Buf = pi16Buf;
000018  6067              STR      r7,[r4,#4]
;;;174    	psInBufCtrl->u16BufReadIdx = 0;
00001a  8120              STRH     r0,[r4,#8]
;;;175    	psInBufCtrl->u16BufWriteIdx = u16FrameSize;
00001c  8165              STRH     r5,[r4,#0xa]
;;;176    	psInBufCtrl->u16SampleRate = u16SampleRate;
00001e  9806              LDR      r0,[sp,#0x18]
000020  81a0              STRH     r0,[r4,#0xc]
;;;177    	psInBufCtrl->u16FrameSize = u16FrameSize;
000022  81e5              STRH     r5,[r4,#0xe]
;;;178    	BUF_CTRL_SET_ACTIVE(psInBufCtrl);
000024  7820              LDRB     r0,[r4,#0]
000026  2102              MOVS     r1,#2
000028  4388              BICS     r0,r0,r1
00002a  7020              STRB     r0,[r4,#0]
;;;179    	memset( psInBufCtrl->pi16Buf, 0, u16FrameSize*2);
00002c  0069              LSLS     r1,r5,#1
00002e  6860              LDR      r0,[r4,#4]
000030  f7fffffe          BL       __aeabi_memclr
;;;180    }
000034  bdf8              POP      {r3-r7,pc}
;;;181    
                          ENDP


                          AREA ||i.Record_StartRec||, CODE, READONLY, ALIGN=2

                  Record_StartRec PROC
;;;98      ************************************************************************************************************/
;;;99     void Record_StartRec(void)
000000  b510              PUSH     {r4,lr}
;;;100    {
;;;101    	
;;;102    	g_u8AppCtrl |= APPCTRL_RECORD;
000002  4812              LDR      r0,|L5.76|
000004  7800              LDRB     r0,[r0,#0]  ; g_u8AppCtrl
000006  2104              MOVS     r1,#4
000008  4308              ORRS     r0,r0,r1
00000a  4910              LDR      r1,|L5.76|
00000c  7008              STRB     r0,[r1,#0]
;;;103    
;;;104    	#if (ADC_FILTER_ENABLE == 1)
;;;105    	NoiseFilter_ResetIIR2();
;;;106    	s_pi16AdcBuf = g_ai16ADCSamples;
;;;107    	#else
;;;108    	if ( BUF_CTRL_ISNOT_CALLBACK(g_psAdcBufCtrl))	
00000e  4810              LDR      r0,|L5.80|
000010  6800              LDR      r0,[r0,#0]  ; g_psAdcBufCtrl
000012  7800              LDRB     r0,[r0,#0]
000014  07c0              LSLS     r0,r0,#31
000016  0fc0              LSRS     r0,r0,#31
000018  2800              CMP      r0,#0
00001a  d10a              BNE      |L5.50|
;;;109    		s_pi16AdcBuf = &g_psAdcBufCtrl->pi16Buf[g_psAdcBufCtrl->u16BufWriteIdx];
00001c  480c              LDR      r0,|L5.80|
00001e  6800              LDR      r0,[r0,#0]  ; g_psAdcBufCtrl
000020  6840              LDR      r0,[r0,#4]
000022  490b              LDR      r1,|L5.80|
000024  6809              LDR      r1,[r1,#0]  ; g_psAdcBufCtrl
000026  8949              LDRH     r1,[r1,#0xa]
000028  0049              LSLS     r1,r1,#1
00002a  1840              ADDS     r0,r0,r1
00002c  4909              LDR      r1,|L5.84|
00002e  6008              STR      r0,[r1,#0]  ; s_pi16AdcBuf
000030  e002              B        |L5.56|
                  |L5.50|
;;;110    	else
;;;111    		s_pi16AdcBuf = g_ai16ADCSamples;
000032  4809              LDR      r0,|L5.88|
000034  4907              LDR      r1,|L5.84|
000036  6008              STR      r0,[r1,#0]  ; s_pi16AdcBuf
                  |L5.56|
;;;112    	#endif
;;;113    	
;;;114    	#if (ADC_PDMA_ENABLE == 1)	
;;;115    	PdmaCtrl_Start(ADC_PDMA_CH, (uint32_t *)&ADC->DAT, (uint32_t *)s_pi16AdcBuf, 8);
000038  2308              MOVS     r3,#8
00003a  4806              LDR      r0,|L5.84|
00003c  4907              LDR      r1,|L5.92|
00003e  6802              LDR      r2,[r0,#0]  ; s_pi16AdcBuf
000040  2000              MOVS     r0,#0
000042  f7fffffe          BL       PdmaCtrl_Start
;;;116    	#endif
;;;117    	
;;;118    	MIC_Start();
000046  f7fffffe          BL       MIC_Start
;;;119    }
00004a  bd10              POP      {r4,pc}
;;;120    
                          ENDP

                  |L5.76|
                          DCD      g_u8AppCtrl
                  |L5.80|
                          DCD      g_psAdcBufCtrl
                  |L5.84|
                          DCD      s_pi16AdcBuf
                  |L5.88|
                          DCD      g_ai16ADCSamples
                  |L5.92|
                          DCD      0x400e0000

                          AREA ||i.Record_StopRec||, CODE, READONLY, ALIGN=2

                  Record_StopRec PROC
;;;121    
;;;122    void  Record_StopRec(void)
000000  b510              PUSH     {r4,lr}
;;;123    {
;;;124    	g_u8AppCtrl &= ~APPCTRL_RECORD;
000002  4806              LDR      r0,|L6.28|
000004  7800              LDRB     r0,[r0,#0]  ; g_u8AppCtrl
000006  2104              MOVS     r1,#4
000008  4388              BICS     r0,r0,r1
00000a  4904              LDR      r1,|L6.28|
00000c  7008              STRB     r0,[r1,#0]
;;;125    	
;;;126    	#if (ADC_PDMA_ENABLE == 1)	
;;;127    	PdmaCtrl_Stop(ADC_PDMA_CH);
00000e  2000              MOVS     r0,#0
000010  f7fffffe          BL       PdmaCtrl_Stop
;;;128    	#endif
;;;129    	
;;;130    	MIC_Stop();
000014  f7fffffe          BL       MIC_Stop
;;;131    
;;;132    }
000018  bd10              POP      {r4,pc}
;;;133    
                          ENDP

00001a  0000              DCW      0x0000
                  |L6.28|
                          DCD      g_u8AppCtrl

                          AREA ||.data||, DATA, ALIGN=2

                  s_pi16AdcBuf
                          DCD      0x00000000
                  g_psAdcBufCtrl
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\..\\Library\\Framework\\src\\Record.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___8_Record_c_331b59af____REV16|
#line 118 "..\\..\\..\\..\\Library\\CMSIS\\Include\\core_cmInstr.h"
|__asm___8_Record_c_331b59af____REV16| PROC
#line 119

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___8_Record_c_331b59af____REVSH|
#line 132
|__asm___8_Record_c_331b59af____REVSH| PROC
#line 133

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

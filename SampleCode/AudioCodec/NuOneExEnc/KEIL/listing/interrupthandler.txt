; generated by Component: ARM Compiler 5.06 update 1 (build 61) Tool: ArmCC [4d35ad]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\object\interrupthandler.o --asm_dir=.\listing\ --list_dir=.\listing\ --depend=.\object\interrupthandler.d --cpu=Cortex-M0 --apcs=interwork -O0 --diag_suppress=9931 -I. -I..\..\..\..\Library\Device\Nuvoton\ISD9100\Include -I..\..\..\..\Library\Framework\inc -I..\..\..\..\Library\IO\inc -I..\..\..\..\Library\Audio\inc -I..\..\..\..\Library\StdDriver\inc -I..\..\..\..\Library\Storage\inc -I..\..\..\..\Library\CMSIS\Include -I..\ -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=518 -D__ISD9100__ --omf_browse=.\object\interrupthandler.crf ..\InterruptHandler.c]
                          THUMB

                          AREA ||i.CAPS_IRQHandler||, CODE, READONLY, ALIGN=2

                  CAPS_IRQHandler PROC
;;;57     //---------------------------------------------------------------------------------------------------------
;;;58     void CAPS_IRQHandler()
000000  4803              LDR      r0,|L1.16|
;;;59     {
;;;60     	TOUCH_KEY_CAP();
;;;61     	CAPSENSE_DISABLE_INTERRUPT();
000002  68c0              LDR      r0,[r0,#0xc]
000004  2101              MOVS     r1,#1
000006  0789              LSLS     r1,r1,#30
000008  4388              BICS     r0,r0,r1
00000a  4901              LDR      r1,|L1.16|
00000c  60c8              STR      r0,[r1,#0xc]
;;;62     }
00000e  4770              BX       lr
;;;63     
                          ENDP

                  |L1.16|
                          DCD      0x40080080

                          AREA ||i.GPAB_IRQHandler||, CODE, READONLY, ALIGN=2

                  GPAB_IRQHandler PROC
;;;90     //---------------------------------------------------------------------------------------------------------
;;;91     void GPAB_IRQHandler()
000000  4806              LDR      r0,|L2.28|
;;;92     {
;;;93     	#if(WAKEUP_GPIO_TRG_PA)
;;;94     	GPIO_CLR_INT_FLAG( PA, GPIO_GET_INT_FLAG( PA, WAKEUP_GPIO_TRG_PA ) );
;;;95     	#endif
;;;96     	#if(WAKEUP_GPIO_TRG_PB)
;;;97     	GPIO_CLR_INT_FLAG( PB, GPIO_GET_INT_FLAG( PB, WAKEUP_GPIO_TRG_PB ) );
000002  6a00              LDR      r0,[r0,#0x20]
000004  2108              MOVS     r1,#8
000006  4008              ANDS     r0,r0,r1
000008  4904              LDR      r1,|L2.28|
00000a  6208              STR      r0,[r1,#0x20]
;;;98     	#endif
;;;99     
;;;100    	NVIC_ClearPendingIRQ(GPAB_IRQn);
00000c  2004              MOVS     r0,#4
00000e  2101              MOVS     r1,#1
000010  4081              LSLS     r1,r1,r0
000012  4a03              LDR      r2,|L2.32|
000014  6011              STR      r1,[r2,#0]
000016  bf00              NOP      
;;;101    }
000018  4770              BX       lr
;;;102    
                          ENDP

00001a  0000              DCW      0x0000
                  |L2.28|
                          DCD      0x50004040
                  |L2.32|
                          DCD      0xe000e280

                          AREA ||i.PDMA_IRQHandler||, CODE, READONLY, ALIGN=2

                  PDMA_IRQHandler PROC
;;;35     //---------------------------------------------------------------------------------------------------------
;;;36     void PDMA_IRQHandler()
000000  b510              PUSH     {r4,lr}
;;;37     {
;;;38     #if ((APU_ENABLE) && (APU_PDMA_ENABLE))
;;;39     	if (PDMA_GET_CH_INT_STS(APU_PDMA_CH)&PDMA_CHIF_TXOKIF_Msk)
000002  480c              LDR      r0,|L3.52|
000004  6a40              LDR      r0,[r0,#0x24]
000006  2102              MOVS     r1,#2
000008  4008              ANDS     r0,r0,r1
00000a  2800              CMP      r0,#0
00000c  d005              BEQ      |L3.26|
;;;40     	{
;;;41     		PDMA_CLR_CH_INT_FLAG(APU_PDMA_CH,PDMA_CHIF_TXOKIF_Msk );											
00000e  2002              MOVS     r0,#2
000010  4908              LDR      r1,|L3.52|
000012  6248              STR      r0,[r1,#0x24]
;;;42     		Playback_Process(g_ai16DACSamples);	
000014  4808              LDR      r0,|L3.56|
000016  f7fffffe          BL       Playback_Process
                  |L3.26|
;;;43     	}
;;;44     #endif
;;;45     	
;;;46     #if ((ADC_ENABLE) && (ADC_PDMA_ENABLE))
;;;47     	if (PDMA_GET_CH_INT_STS(ADC_PDMA_CH)&PDMA_CHIF_TXOKIF_Msk)
00001a  4808              LDR      r0,|L3.60|
00001c  6a40              LDR      r0,[r0,#0x24]
00001e  2102              MOVS     r1,#2
000020  4008              ANDS     r0,r0,r1
000022  2800              CMP      r0,#0
000024  d005              BEQ      |L3.50|
;;;48     	{
;;;49     		PDMA_CLR_CH_INT_FLAG(ADC_PDMA_CH,PDMA_CHIF_TXOKIF_Msk );
000026  2002              MOVS     r0,#2
000028  4904              LDR      r1,|L3.60|
00002a  6248              STR      r0,[r1,#0x24]
;;;50     		Record_Process(g_ai16ADCSamples);	
00002c  4804              LDR      r0,|L3.64|
00002e  f7fffffe          BL       Record_Process
                  |L3.50|
;;;51     	}
;;;52     #endif
;;;53     }
000032  bd10              POP      {r4,pc}
;;;54     
                          ENDP

                  |L3.52|
                          DCD      0x50008100
                  |L3.56|
                          DCD      g_ai16DACSamples
                  |L3.60|
                          DCD      0x50008000
                  |L3.64|
                          DCD      g_ai16ADCSamples

                          AREA ||i.RTC_IRQHandler||, CODE, READONLY, ALIGN=1

                  RTC_IRQHandler PROC
;;;105    //---------------------------------------------------------------------------------------------------------
;;;106    void RTC_IRQHandler()
000000  4770              BX       lr
;;;107    {
;;;108    //	RTC_CLEAR_INT_FLAG();
;;;109    }
;;;110    
                          ENDP


                          AREA ||i.TMR0_IRQHandler||, CODE, READONLY, ALIGN=2

                  TMR0_IRQHandler PROC
;;;66     //---------------------------------------------------------------------------------------------------------
;;;67     void TMR0_IRQHandler()
000000  bf00              NOP      
000002  2001              MOVS     r0,#1
000004  4901              LDR      r1,|L5.12|
000006  6088              STR      r0,[r1,#8]
000008  bf00              NOP      
;;;68     {
;;;69     	TIMER_ClearIntFlag(TIMER0);
;;;70     
;;;71     	ULTRAIO_OUTCURVETMR0();
;;;72     }
00000a  4770              BX       lr
;;;73     
                          ENDP

                  |L5.12|
                          DCD      0x40010000

                          AREA ||i.TMR1_IRQHandler||, CODE, READONLY, ALIGN=2

                  TMR1_IRQHandler PROC
;;;76     //---------------------------------------------------------------------------------------------------------
;;;77     void TMR1_IRQHandler()
000000  b510              PUSH     {r4,lr}
;;;78     {
;;;79     	TIMER_ClearIntFlag(TIMER1);
000002  bf00              NOP      
000004  2001              MOVS     r0,#1
000006  4903              LDR      r1,|L6.20|
000008  6088              STR      r0,[r1,#8]
00000a  bf00              NOP      
;;;80     	
;;;81     	TRIGGER_KEY_DEBOUNCE();
00000c  f7fffffe          BL       Keypad_TgrDecDebounceCounter
;;;82     	MATRIX_KEY_DEBOUNCE();
;;;83     	TOUCH_KEY_PRESS_COUNT();
;;;84     	
;;;85     	ULTRAIO_OUTCURVETMR1();
;;;86     }
000010  bd10              POP      {r4,pc}
;;;87     
                          ENDP

000012  0000              DCW      0x0000
                  |L6.20|
                          DCD      0x40010020

                          AREA ||i.WDT_IRQHandler||, CODE, READONLY, ALIGN=1

                  WDT_IRQHandler PROC
;;;113    //---------------------------------------------------------------------------------------------------------
;;;114    void WDT_IRQHandler()
000000  4770              BX       lr
;;;115    {
;;;116    //	WDT_CLEAR_TIMEOUT_WAKEUP_FLAG();	
;;;117    //	WDT_CLEAR_RESET_FLAG();
;;;118    }
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=1

                  g_ai16DACSamples
                          %        16
                  g_ai16ADCSamples
                          %        16

;*** Start embedded assembler ***

#line 1 "..\\InterruptHandler.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___18_InterruptHandler_c_ddbff97a____REV16|
#line 118 "..\\..\\..\\..\\Library\\CMSIS\\Include\\core_cmInstr.h"
|__asm___18_InterruptHandler_c_ddbff97a____REV16| PROC
#line 119

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___18_InterruptHandler_c_ddbff97a____REVSH|
#line 132
|__asm___18_InterruptHandler_c_ddbff97a____REVSH| PROC
#line 133

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
